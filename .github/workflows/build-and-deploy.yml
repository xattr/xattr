name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - 'ubuntu-latest'
        - 'macos-latest'

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD_FRONTEND: "build"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PYPY_AARCH64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PYPY_I686_IMAGE: manylinux2014
          CIBW_ARCHS_LINUX: "auto aarch64"
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"

      - uses: actions/upload-artifact@v3
        if: "github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')"
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: python -m pip install . --upgrade pip setuptools wheel

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        if: "github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')"
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/xattr/
    permissions:
      id-token: write
    # upload to PyPI on every tag starting with 'v'
    if: "github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')"
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.10

  upload_pypi_test:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: "testpypi"
      url: https://test.pypi.org/p/xattr/
    permissions:
      id-token: write
    # upload to test PyPI on every tag starting with 'test-v'
    if: "github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/test-v')"
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          repository-url: https://test.pypi.org/legacy/
